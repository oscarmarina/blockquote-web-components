{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/BlockquoteBaseMeta.js",
      "declarations": [
        {
          "kind": "class",
          "description": "![Lit](https://img.shields.io/badge/lit-3.0.0-blue.svg)\n\n`BlockquoteBaseMeta` is a generic class for sharing information across the DOM tree, inspired by Polymer's [`iron-meta`](https://github.com/PolymerElements/iron-meta/blob/master/iron-meta.js).\nIt employs the [monostate pattern](http://c2.com/cgi/wiki?MonostatePattern) to allow any instance to access the shared information.\n\nThe class instances hold the actual data. They must be created before attempting to access them.\n\n`BlockquoteBaseMeta` uses a [Map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map) to store the data. Unlike an Object, a Map allows keys of any type.\n\n### Demo\n\n[![Open in StackBlitz](https://developer.stackblitz.com/img/open_in_stackblitz.svg)](https://stackblitz.com/github/oscarmarina/blockquote-web-components/tree/main/packages/base/blockquote-base-meta)\n\n#### Usage\n\n```js\nimport { BlockquoteBaseMeta } from '@blockquote-web-components/blockquote-base-meta';\n\nconst myDefault = new BlockquoteBaseMeta({\n  key: 'basic',\n  value: 'foo/bar',\n});\n\nconsole.log(myDefault.byKey('basic')); // foo/bar\n```\n\n#### Value Getter - String\n\n```js\nimport { BlockquoteBaseMeta } from '@blockquote-web-components/blockquote-base-meta';\n\nconst myDefault = new BlockquoteBaseMeta({\n  key: 'basic',\n  value: 'foo/bar',\n});\n\nconsole.log(myDefault.value); // foo/bar\n```\n\n#### List Getter - Array\n\nThe `list` getter returns an array of all values stored in the `BlockquoteBaseMeta` instance.\n\n```js\nimport { BlockquoteBaseMeta } from '@blockquote-web-components/blockquote-base-meta';\n\nconst myDefault = new BlockquoteBaseMeta({\n  type: 'three',\n  key: 'basic',\n  value: 'foo/bar',\n});\n\nconsole.log(myDefault.list); // ['foo/bar']\n```\n\n#### ObjectList Getter - Object\n\n```js\nimport { BlockquoteBaseMeta } from '@blockquote-web-components/blockquote-base-meta';\n\nconst myDefault = new BlockquoteBaseMeta({\n  type: 'one',\n  key: 'basic',\n  value: 'foo/bar',\n});\n\nconsole.log(myDefault.objectList); // {basic: 'foo/bar'}\n```\n\n#### MapList Getter - Map\n\n```js\nimport { BlockquoteBaseMeta } from '@blockquote-web-components/blockquote-base-meta';\n\nconst keyInfo = { id: 'dsfaskj0' };\nconst myDefault = new BlockquoteBaseMeta({\n  type: 'two',\n  key: keyInfo,\n  value: 'foo/bar',\n});\n\nconsole.log(myDefault.mapList); // Map(1) { { id: 'dsfaskj0' } => 'foo/bar' }\n```",
          "name": "BlockquoteBaseMeta",
          "members": [
            {
              "kind": "field",
              "name": "types",
              "static": true,
              "readonly": true
            },
            {
              "kind": "field",
              "name": "uuid",
              "static": true,
              "readonly": true
            },
            {
              "kind": "field",
              "name": "value",
              "description": "Sets value to instance type and key",
              "return": {
                "type": {
                  "text": "*"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "*"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "list",
              "description": "Returns a list (Array) of the values for that instance `type`",
              "return": {
                "type": {
                  "text": "Array"
                }
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "mapList",
              "description": "Returns a list (Map) for that instance `type`",
              "return": {
                "type": {
                  "text": "Map"
                }
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "objectList",
              "description": "Returns a list (Object) for that instance `type`",
              "return": {
                "type": {
                  "text": "Object"
                }
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "byKey",
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "*"
                  }
                }
              ],
              "description": "Returns the value of the provided key for that instance `type`",
              "return": {
                "type": {
                  "text": "*"
                }
              }
            },
            {
              "kind": "field",
              "name": "type",
              "description": "Type of Meta",
              "default": "type"
            },
            {
              "kind": "field",
              "name": "key",
              "description": "Key for Meta",
              "default": "key"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BlockquoteBaseMeta",
          "declaration": {
            "name": "BlockquoteBaseMeta",
            "module": "src/BlockquoteBaseMeta.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "BlockquoteBaseMeta",
          "declaration": {
            "name": "BlockquoteBaseMeta",
            "module": "./src/BlockquoteBaseMeta.js"
          }
        }
      ]
    }
  ]
}
