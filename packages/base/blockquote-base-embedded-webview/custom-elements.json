{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/BlockquoteBaseEmbeddedWebview.js",
      "declarations": [
        {
          "kind": "class",
          "description": "![Lit](https://img.shields.io/badge/lit-3.0.0-blue.svg)\n\n`blockquote-base-embedded-webview` offers a responsive display using individual HTML files as content with different use cases to be displayed.\nIt will create a `select` tag with the provided demo HTML files and add the `[data-embedded]` attribute to the loaded body tag.\n\n### Demo\n\n[![Open in StackBlitz](https://developer.stackblitz.com/img/open_in_stackblitz.svg)](https://stackblitz.com/github/oscarmarina/blockquote-web-components/tree/main/packages/base/blockquote-base-embedded-webview)\n\n### Usage\n\n```html\n<blockquote-base-embedded-webview heading=\"My demo title\">\n  <template data-src=\"./base.html\" data-option=\"Base\" data-description=\"base - description\"></template>\n  <template data-src=\"./complex.html\" data-option=\"Complex\" data-description=\"complex - description\"></template>\n</blockquote-base-embedded-webview>\n```\n\n## base.html\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <title>Demo Base</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta charset=\"utf-8\" />\n    <style>\n      :root {\n        font: normal medium/1.25 sans-serif;\n      }\n      body {\n        margin: 0;\n      }\n      [data-embedded] .hidden {\n        display: none;\n      }\n    </style>\n  </head>\n  <body>\n    <h1 class=\"hidden\">Heading</h1>\n    <p>Base Demo</p>\n  </body>\n</html>\n```",
          "name": "BlockquoteBaseEmbeddedWebview",
          "members": [
            {
              "kind": "field",
              "name": "_updateSize"
            },
            {
              "kind": "field",
              "name": "_headingLevel",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "_litHtmlRender"
            },
            {
              "kind": "field",
              "name": "_lightDomTpl",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_headerTpl",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_headingTpl",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_navigationDemosTpl",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_selectTpl",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_externalLinkTpl",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_descriptionTpl",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_readDataPosTpl",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_screenSizeTpl",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_mainTpl",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_embeddedSlotTpl",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "_onChangeFile",
              "parameters": [
                {
                  "name": "{ target }"
                }
              ]
            },
            {
              "kind": "field",
              "name": "selected",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "description": "Index of currently srcset file",
              "default": "0",
              "attribute": "selected"
            },
            {
              "kind": "field",
              "name": "screenSizeSelected",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "description": "Index of currently screen size selected",
              "default": "0",
              "attribute": "screen-size-selected"
            },
            {
              "kind": "field",
              "name": "headingLevel",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "description": "Heading level from 1 to 6",
              "default": "1",
              "attribute": "heading-level",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "heading",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "The heading of the webview.",
              "default": "''",
              "attribute": "heading"
            },
            {
              "kind": "field",
              "name": "__resetResizing",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "__selectArrow",
              "default": "html` <svg aria-hidden=\"true\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentcolor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> <polyline points=\"6 9 12 15 18 9\" /> </svg> `"
            },
            {
              "kind": "field",
              "name": "__readDataPos",
              "type": {
                "text": "object"
              },
              "default": "{ x: '0', y: '0', resizing: false, cursor: '' }"
            },
            {
              "kind": "field",
              "name": "limitHeight",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Limit height to 100% available",
              "default": "false",
              "attribute": "limit-height",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_sources",
              "type": {
                "text": "array"
              },
              "default": "[{ src: '', option: '', description: '' }]"
            },
            {
              "kind": "field",
              "name": "_embeddedResizeRef"
            }
          ],
          "attributes": [
            {
              "name": "heading",
              "type": {
                "text": "string"
              },
              "description": "The heading of the webview.",
              "default": "''",
              "fieldName": "heading"
            },
            {
              "name": "selected",
              "type": {
                "text": "number"
              },
              "description": "Index of currently srcset file",
              "default": "0",
              "fieldName": "selected"
            },
            {
              "name": "heading-level",
              "type": {
                "text": "number"
              },
              "description": "Heading level from 1 to 6",
              "default": "1",
              "fieldName": "headingLevel"
            },
            {
              "name": "screen-size-selected",
              "type": {
                "text": "number"
              },
              "description": "Index of currently screen size selected",
              "default": "0",
              "fieldName": "screenSizeSelected"
            },
            {
              "name": "limit-height",
              "type": {
                "text": "boolean"
              },
              "description": "Limit height to 100% available",
              "default": "false",
              "fieldName": "limitHeight"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "blockquote-base-embedded-webview",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BlockquoteBaseEmbeddedWebview",
          "declaration": {
            "name": "BlockquoteBaseEmbeddedWebview",
            "module": "src/BlockquoteBaseEmbeddedWebview.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/BlockquoteBaseEmbeddedWebviewElement.js",
      "declarations": [
        {
          "kind": "class",
          "description": "![Lit](https://img.shields.io/badge/lit-3.0.0-blue.svg)\n\n`blockquote-base-embedded-webview-element` wraps an `iframe` or `object` and shows it through light dom.",
          "name": "BlockquoteBaseEmbeddedWebviewElement",
          "members": [
            {
              "kind": "method",
              "name": "_litHtmlRender"
            },
            {
              "kind": "field",
              "name": "_lightDomTpl",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_loadResource",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_embeddedTpl",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "_fetch",
              "parameters": [
                {
                  "name": "resource"
                }
              ]
            },
            {
              "kind": "field",
              "name": "_onLoadElement"
            },
            {
              "kind": "field",
              "name": "embeddedTitle",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "The title attribute on an <element> to label its content",
              "default": "''",
              "attribute": "embedded-title"
            },
            {
              "kind": "field",
              "name": "src",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "The URL of the page to embed",
              "default": "''",
              "attribute": "src"
            },
            {
              "kind": "field",
              "name": "type",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "The type of the tag to embed - iframe or object",
              "default": "'iframe'",
              "attribute": "type"
            }
          ],
          "attributes": [
            {
              "name": "embedded-title",
              "type": {
                "text": "string"
              },
              "description": "The title attribute on an <element> to label its content",
              "default": "''",
              "fieldName": "embeddedTitle"
            },
            {
              "name": "src",
              "type": {
                "text": "string"
              },
              "description": "The URL of the page to embed",
              "default": "''",
              "fieldName": "src"
            },
            {
              "name": "type",
              "type": {
                "text": "string"
              },
              "description": "The type of the tag to embed - iframe or object",
              "default": "'iframe'",
              "fieldName": "type"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "blockquote-base-embedded-webview-element",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BlockquoteBaseEmbeddedWebviewElement",
          "declaration": {
            "name": "BlockquoteBaseEmbeddedWebviewElement",
            "module": "src/BlockquoteBaseEmbeddedWebviewElement.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/BlockquoteBaseEmbeddedWebviewResize.js",
      "declarations": [
        {
          "kind": "class",
          "description": "![Lit](https://img.shields.io/badge/lit-3.0.0-blue.svg)\n\n`blockquote-base-embedded-webview-resize`",
          "name": "BlockquoteBaseEmbeddedWebviewResize",
          "members": [
            {
              "kind": "field",
              "name": "_resizersTpl",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_doubleclickForCssInitialSize"
            },
            {
              "kind": "method",
              "name": "_createResizer",
              "parameters": [
                {
                  "name": "DOMRect",
                  "type": {
                    "text": "!string"
                  }
                },
                {
                  "name": "ev",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_resize",
              "parameters": [
                {
                  "name": "{ detail }"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_dispatchResizeEvent"
            },
            {
              "kind": "method",
              "name": "_getBoundingClientRect",
              "parameters": [
                {
                  "name": "DOMRect",
                  "type": {
                    "text": "!string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_cursor",
              "type": {
                "text": "string"
              },
              "default": "''"
            },
            {
              "kind": "field",
              "name": "_createResizerLeft"
            },
            {
              "kind": "field",
              "name": "_createResizerRight"
            },
            {
              "kind": "field",
              "name": "_createResizerBottom"
            },
            {
              "kind": "field",
              "name": "_createResizerBottomLeft"
            },
            {
              "kind": "field",
              "name": "_createResizerBottomRight"
            },
            {
              "kind": "field",
              "name": "_getBoundingClientRectWidth",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "_getBoundingClientRectHeight",
              "type": {
                "text": "number"
              },
              "default": "0"
            }
          ],
          "events": [
            {
              "description": "Raised when the element's dimensions changes",
              "name": "webviewresize"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "blockquote-base-embedded-webview-resize",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BlockquoteBaseEmbeddedWebviewResize",
          "declaration": {
            "name": "BlockquoteBaseEmbeddedWebviewResize",
            "module": "src/BlockquoteBaseEmbeddedWebviewResize.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/BlockquoteBaseEmbeddedWebviewSize.js",
      "declarations": [
        {
          "kind": "class",
          "description": "![Lit](https://img.shields.io/badge/lit-3.0.0-blue.svg)\n\n`blockquote-base-embedded-webview-size` provides a list of ideal screen sizes for responsive designs.\n<br>\n\n```html\n<blockquote-base-embedded-webview-size\n  screen-sizes=\"[\n   { width: 360, height: 640, id: '360x640' },\n   { width: 360, height: 800, id: '360x800' },\n   { width: 414, height: 896, id: '414x896' },\n   { width: 768, height: 1024, id: '768x1024' },\n   { width: 810, height: 1080, id: '810x1080' },\n   { width: 1280, height: 800, id: '1280x800' },\n   { width: 1366, height: 768, id: '1366x768' },\n   { width: 1536, height: 864, id: '1536x864' },\n   { width: 1920, height: 1080, id: '1920x1080' },\n  ]\"\n></blockquote-base-embedded-webview-size>\n```",
          "name": "BlockquoteBaseEmbeddedWebviewSize",
          "members": [
            {
              "kind": "field",
              "name": "selectedSize",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "selectedDetail",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "computedStyleWidth",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_toolbarTpl",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_visualTextTpl",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_onResize"
            },
            {
              "kind": "method",
              "name": "_setSelected",
              "parameters": [
                {
                  "name": "ev"
                }
              ]
            },
            {
              "kind": "field",
              "name": "showOverflowSize",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Show screen size options that are too large for the container",
              "default": "false",
              "attribute": "show-overflow-size"
            },
            {
              "kind": "field",
              "name": "selected",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "description": "The screen size option selected",
              "default": "0",
              "attribute": "selected"
            },
            {
              "kind": "field",
              "name": "disabledSelectedSizeText",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "If true, selected size text is disabled",
              "default": "false",
              "attribute": "disabled-selected-size-text"
            },
            {
              "kind": "field",
              "name": "screenSizes",
              "privacy": "public",
              "type": {
                "text": "array"
              },
              "description": "The screen size options to display",
              "default": "[ { width: 360, height: 800, id: '360x800' }, { width: 390, height: 864, id: '390x864' }, { width: 414, height: 896, id: '414x896' }, { width: 768, height: 1024, id: '768x1024' }, { width: 810, height: 1080, id: '810x1080' }, { width: 1280, height: 720, id: '1280x800' }, { width: 1366, height: 768, id: '1366x768' }, { width: 1536, height: 864, id: '1536x864' }, { width: 1920, height: 1080, id: '1920x1080' }, ]",
              "attribute": "screen-sizes"
            },
            {
              "kind": "field",
              "name": "widthInPercent",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Percentage value for the width",
              "default": "false",
              "attribute": "width-in-percent"
            }
          ],
          "attributes": [
            {
              "name": "screen-sizes",
              "type": {
                "text": "array"
              },
              "description": "The screen size options to display",
              "default": "[ { width: 360, height: 800, id: '360x800' }, { width: 390, height: 864, id: '390x864' }, { width: 414, height: 896, id: '414x896' }, { width: 768, height: 1024, id: '768x1024' }, { width: 810, height: 1080, id: '810x1080' }, { width: 1280, height: 720, id: '1280x800' }, { width: 1366, height: 768, id: '1366x768' }, { width: 1536, height: 864, id: '1536x864' }, { width: 1920, height: 1080, id: '1920x1080' }, ]",
              "fieldName": "screenSizes"
            },
            {
              "name": "width-in-percent",
              "type": {
                "text": "boolean"
              },
              "description": "Percentage value for the width",
              "default": "false",
              "fieldName": "widthInPercent"
            },
            {
              "name": "show-overflow-size",
              "type": {
                "text": "boolean"
              },
              "description": "Show screen size options that are too large for the container",
              "default": "false",
              "fieldName": "showOverflowSize"
            },
            {
              "name": "disabled-selected-size-text",
              "type": {
                "text": "boolean"
              },
              "description": "If true, selected size text is disabled",
              "default": "false",
              "fieldName": "disabledSelectedSizeText"
            },
            {
              "name": "selected",
              "type": {
                "text": "number"
              },
              "description": "The screen size option selected",
              "default": "0",
              "fieldName": "selected"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "blockquote-base-embedded-webview-size",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BlockquoteBaseEmbeddedWebviewSize",
          "declaration": {
            "name": "BlockquoteBaseEmbeddedWebviewSize",
            "module": "src/BlockquoteBaseEmbeddedWebviewSize.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "BlockquoteBaseEmbeddedWebview",
          "declaration": {
            "name": "BlockquoteBaseEmbeddedWebview",
            "module": "./BlockquoteBaseEmbeddedWebview.js"
          }
        },
        {
          "kind": "js",
          "name": "BlockquoteBaseEmbeddedWebviewSize",
          "declaration": {
            "name": "BlockquoteBaseEmbeddedWebviewSize",
            "module": "./BlockquoteBaseEmbeddedWebviewSize.js"
          }
        },
        {
          "kind": "js",
          "name": "BlockquoteBaseEmbeddedWebviewResize",
          "declaration": {
            "name": "BlockquoteBaseEmbeddedWebviewResize",
            "module": "./BlockquoteBaseEmbeddedWebviewResize.js"
          }
        },
        {
          "kind": "js",
          "name": "BlockquoteBaseEmbeddedWebviewElement",
          "declaration": {
            "name": "BlockquoteBaseEmbeddedWebviewElement",
            "module": "./BlockquoteBaseEmbeddedWebviewElement.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/styles/blockquote-base-embedded-webview-element-styles.css.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css`:host, ::slotted([slot=embedded]) { display: block; box-sizing: border-box; width: 100%; height: 100%; margin: 0; border: 0; } :host([hidden]), [hidden] { display: none !important; } *, *::before, *::after { box-sizing: inherit; }`"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/styles/blockquote-base-embedded-webview-element-styles.css.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/styles/blockquote-base-embedded-webview-resize-styles.css.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css`:host { --__resizer-factor: calc(1.25rem * var(--blockquote-base-embedded-webview-resize-factor, 1)); --_rect-min-width: var(--blockquote-base-embedded-webview-resize-rect-min-width, 18.75rem); --_rect-min-height: var(--blockquote-base-embedded-webview-resize-rect-min-height, 9.375rem); --_rect-max-width: var(--blockquote-base-embedded-webview-resize-rect-max-width, 100%); --_rect-max-height: var(--blockquote-base-embedded-webview-resize-rect-max-height, 100%); --_rect-width: var(--blockquote-base-embedded-webview-resize-rect-width, 40rem); --_rect-height: var(--blockquote-base-embedded-webview-resize-rect-height, 22.5rem); --_resizer-bgcolor: var(--blockquote-base-embedded-webview-resize-resizer-bgcolor, rgb(234, 234, 234)); --_resizer-bgcolor-hover: var(--blockquote-base-embedded-webview-resize-resizer-bgcolor-hover, rgb(220, 220, 220)); --_resizer-bgimage-ew-hover: var(--blockquote-base-embedded-webview-resize-resizer-bgcolor-hover, linear-gradient(0deg, rgba(220, 220, 220, 0.2), rgba(220, 220, 220, 1) 50%, rgba(220, 220, 220, 0.2))); --_resizer-bgimage-s-hover: var(--blockquote-base-embedded-webview-resize-resizer-bgcolor-hover, linear-gradient(90deg, rgba(220, 220, 220, 0.2), rgba(220, 220, 220, 1) 50%, rgba(220, 220, 220, 0.2))); contain: content; display: flex; flex-direction: column; align-items: center; height: inherit; padding: calc(var(--__resizer-factor) * 1) 0 calc(var(--__resizer-factor) * 2); } :host([hidden]), [hidden] { display: none !important; } *, *::before, *::after { box-sizing: inherit; } .rect { position: relative; align-self: center; min-width: var(--_rect-min-width); min-height: var(--_rect-min-height); max-width: var(--_rect-max-width); max-height: var(--_rect-max-height); width: var(--_rect-width); height: var(--_rect-height); transform: translateZ(0); } .resizer { /* https://github.com/ChromeDevTools/devtools-frontend/tree/main/front_end/Images/src */ display: block; position: absolute; background-color: var(--_resizer-bgcolor); width: 100%; height: 100%; } .resizer::after { content: url(\"data:image/svg+xml,%0A%3Csvg width='6' height='26' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='2' height='26' rx='1' fill='%23848282'/%3E%3Crect x='4' width='2' height='26' rx='1' fill='%23848282'/%3E%3C/svg%3E\"); position: absolute; top: 50%; left: 50%; transform: translateX(-50%); } .resizer-n { height: calc(var(--__resizer-factor) / 4); top: calc(var(--__resizer-factor) / 4 * -1); left: calc(var(--__resizer-factor) * -1); width: calc(100% + var(--__resizer-factor) * 2); border-top-left-radius: calc(var(--__resizer-factor) / 10); border-top-right-radius: calc(var(--__resizer-factor) / 10); } .resizer-n::after { content: none; } .resizer-se { cursor: nwse-resize; border-bottom-right-radius: calc(var(--__resizer-factor) / 10); } .resizer-se::after { transform: translate(-50%, -50%); } .resizer-sw { cursor: nesw-resize; border-bottom-left-radius: calc(var(--__resizer-factor) / 10); } .resizer-sw::after { transform: translate(-50%, -50%) translateY(-0.0938rem) rotate(90deg); } .resizer-se, .resizer-e { right: calc(var(--__resizer-factor) * -1); } .resizer-se, .resizer-sw, .resizer-s { bottom: calc(var(--__resizer-factor) * -1); } .resizer-w, .resizer-sw { left: calc(var(--__resizer-factor) * -1); } .resizer-se, .resizer-sw { height: var(--__resizer-factor); width: var(--__resizer-factor); } .resizer-se::after, .resizer-sw::after { content: url(\"data:image/svg+xml,%0A%3Csvg width='13' height='13' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)' fill='%23848282'%3E%3Crect x='-.195' y='10.775' width='15.566' height='2' rx='1' transform='rotate(-45 -.195 10.775)'/%3E%3Crect x='5.346' y='11.241' width='8.401' height='2' rx='1' transform='rotate(-45 5.346 11.24)'/%3E%3C/g%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Cpath fill='%23fff' d='M0 0h13v13H0z'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E\"); } .resizer-se:hover, .resizer-sw:hover { background-color: var(--_resizer-bgcolor-hover); } .resizer-s { cursor: ns-resize; height: var(--__resizer-factor); } .resizer-s::after { content: url(\"data:image/svg+xml,%0A%3Csvg width='26' height='6' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='26' height='2' rx='1' fill='%23848282'/%3E%3Crect y='4' width='26' height='2' rx='1' fill='%23848282'/%3E%3C/svg%3E\"); transform: translate(-50%, -50%) translateY(-0.1875rem); } .resizer-s:hover { background-image: var(--_resizer-bgimage-s-hover); } .resizer-e, .resizer-w { cursor: ew-resize; width: var(--__resizer-factor); } .resizer-e:hover, .resizer-w:hover { background-image: var(--_resizer-bgimage-ew-hover); background-position: bottom; } :host([resizing]), :host([resizing]) ::slotted(*) { cursor: move; -webkit-user-select: none; -moz-user-select: none; user-select: none; } :host([resizing]) ::slotted(*) { pointer-events: none; }`"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/styles/blockquote-base-embedded-webview-resize-styles.css.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/styles/blockquote-base-embedded-webview-size-styles.css.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css`:host { --_host-color: var(--blockquote-base-embedded-webview-size-color, inherit); --_rect-height: var(--blockquote-base-embedded-webview-size-rect-height, 1.125rem); --_rect-size: var(--blockquote-base-embedded-webview-size-rect-size, 0.6875rem); --_button-border-color: var(--blockquote-base-embedded-webview-size-button-border-color, rgb(184, 184, 184)); --_button-bgcolor: var(--blockquote-base-embedded-webview-size-button-bgcolor, rgb(234, 234, 234)); --_button-bgcolor-hover: var(--blockquote-base-embedded-webview-size-button-bgcolor-hover, rgb(220, 220, 220)); --_button-bgcolor-selected-hover: var(--blockquote-base-embedded-webview-size-button-bgcolor-selected-hover, rgb(210, 210, 210)); color: var(--_host-color); display: block; box-sizing: border-box; pointer-events: none; } :host([hidden]), [hidden] { display: none !important; } *, *::before, *::after { box-sizing: inherit; } button { -webkit-appearance: none; -moz-appearance: none; appearance: none; background-color: transparent; border: none; color: inherit; cursor: pointer; display: inline-block; pointer-events: auto; font: inherit; margin: 0; padding: 0; height: inherit; text-align: inherit; text-decoration: none; text-transform: inherit; text-shadow: inherit; letter-spacing: inherit; word-spacing: inherit; width: auto; } .rect { overflow: hidden; height: var(--_rect-height); position: relative; display: flex; justify-content: center; align-items: center; font-size: var(--_rect-size); white-space: nowrap; text-align: center; letter-spacing: 0.0625rem; box-shadow: 0 1px 0 0 var(--_button-bgcolor); } .rect [aria-hidden=true] { cursor: pointer; letter-spacing: inherit; position: absolute; } .rect [aria-disabled=true] { opacity: 0.4; } .rect [aria-disabled=true]::after { content: \"\"; display: block; height: 1px; width: calc(100% + 2rem); position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%); background-image: linear-gradient(90deg, rgba(0, 0, 0, 0), rgb(0, 0, 0), rgba(0, 0, 0, 0)); } button { position: absolute; background-color: var(--_button-bgcolor); border-left: 1px solid var(--_button-border-color); border-right: 1px solid var(--_button-border-color); } button span { opacity: 0; pointer-events: none; -webkit-user-select: none; -moz-user-select: none; user-select: none; } button:hover { background-color: var(--_button-bgcolor-hover); } button[data-selected], button[data-selected] ~ button { background-color: var(--_button-bgcolor-hover); } button:hover ~ button { background-color: transparent; } button:not([data-selected]):hover span { opacity: 1; } button:not([data-selected]):hover ~ span { visibility: hidden; } button[data-selected] ~ button:hover { background-color: var(--_button-bgcolor-selected-hover); }`"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/styles/blockquote-base-embedded-webview-size-styles.css.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/styles/blockquote-base-embedded-webview-styles.css.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "css`:host { --_host-color: var(--blockquote-base-embedded-webview-color, rgb(32, 32, 32)); --_main-bgcolor: var(--blockquote-base-embedded-webview-main-bgcolor, rgb(250, 250, 250)); --_select-bgcolor: var(--blockquote-base-embedded-webview-select-bgcolor, rgb(222, 222, 222)); --_select-transition: var(--blockquote-base-embedded-webview-select-transition, border-bottom 196ms ease-out, var(--blockquote-base-embedded-webview-select-transition, border-bottom 196ms ease-out)); --blockquote-base-embedded-webview-resize-rect-width: 40rem; /* 40rem */ --blockquote-base-embedded-webview-resize-rect-height: 22.5rem; /* 22.5rem */ display: flex; flex-direction: column; box-sizing: border-box; width: 100%; height: 100%; color: var(--_host-color); } :host([hidden]), [hidden] { display: none !important; } .sr-only { position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0, 0, 0, 0); white-space: nowrap; border: 0; } .main { contain: content; flex: 1; background-color: var(--_main-bgcolor); } :host([limit-height]) .main { height: inherit; } *, *::before, *::after { box-sizing: inherit; } header > div { position: relative; max-width: 80rem; margin: 0 auto; padding: 0.5rem 1.5rem; } [role=heading] { font-size: 1.25rem; margin-bottom: 0.5rem; } [role=heading] + div { display: flex; align-items: center; } .open-externally { width: 1rem; display: inline-block; margin-left: 1rem; color: inherit; } .open-externally svg { vertical-align: bottom; } .select { display: inline-grid; grid-template-areas: select; align-items: center; } .select > * { grid-area: select; } .select svg { width: 0.875rem; justify-self: end; pointer-events: none; } .select select { -webkit-appearance: none; -moz-appearance: none; appearance: none; color: inherit; font: inherit; background-color: transparent; border: none; border-bottom: 0.125rem solid var(--_select-bgcolor); padding: 0.25em 1em 0.25em 0; margin: 0; width: 100%; cursor: pointer; outline: none; border-radius: 0; min-width: 10ch; max-width: 18ch; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; transition: var(--_select-transition); } .select select:hover, .select select:focus { border-bottom-color: currentcolor; } .description { margin: 0.5rem 0 1rem; font-size: 0.875rem; } .description:empty { visibility: hidden; } .read-data-pos { font-size: 0.875rem; letter-spacing: 0.0156rem; position: fixed; z-index: 1; right: 0.375rem; top: 0.3125rem; opacity: 0; transition: opacity 90ms cubic-bezier(0.25, 0.46, 0.45, 0.94); } blockquote-base-embedded-webview-resize { overflow-x: hidden; }`"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/styles/blockquote-base-embedded-webview-styles.css.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "define/blockquote-base-embedded-webview-element.js",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "blockquote-base-embedded-webview-element",
          "declaration": {
            "name": "BlockquoteBaseEmbeddedWebviewElement",
            "module": "/src/BlockquoteBaseEmbeddedWebviewElement.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "define/blockquote-base-embedded-webview-resize.js",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "blockquote-base-embedded-webview-resize",
          "declaration": {
            "name": "BlockquoteBaseEmbeddedWebviewResize",
            "module": "/src/BlockquoteBaseEmbeddedWebviewResize.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "define/blockquote-base-embedded-webview-size.js",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "blockquote-base-embedded-webview-size",
          "declaration": {
            "name": "BlockquoteBaseEmbeddedWebviewSize",
            "module": "/src/BlockquoteBaseEmbeddedWebviewSize.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "define/blockquote-base-embedded-webview.js",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "blockquote-base-embedded-webview",
          "declaration": {
            "name": "BlockquoteBaseEmbeddedWebview",
            "module": "/src/BlockquoteBaseEmbeddedWebview.js"
          }
        }
      ]
    }
  ]
}
