:host {
  --__resizer-factor: calc(1.25rem * var(--blockquote-base-embedded-webview-resize-factor, 1));
  --_rect-min-width: var(--blockquote-base-embedded-webview-resize-rect-min-width, 18.75rem);
  --_rect-min-height: var(--blockquote-base-embedded-webview-resize-rect-min-height, 9.375rem);
  --_rect-max-width: var(--blockquote-base-embedded-webview-resize-rect-max-width, 100%);
  --_rect-max-height: var(--blockquote-base-embedded-webview-resize-rect-max-height, 100%);
  --_rect-width: var(--blockquote-base-embedded-webview-resize-rect-width, 40rem);
  --_rect-height: var(--blockquote-base-embedded-webview-resize-rect-height, 22.5rem);
  --_resizer-bgcolor: var(
    --blockquote-base-embedded-webview-resize-resizer-bgcolor,
    rgb(234, 234, 234)
  );
  --_resizer-bgcolor-hover: var(
    --blockquote-base-embedded-webview-resize-resizer-bgcolor-hover,
    rgb(220, 220, 220)
  );
  --_resizer-bgimage-ew-hover: var(
    --blockquote-base-embedded-webview-resize-resizer-bgcolor-hover,
    linear-gradient(
      0deg,
      rgb(220, 220, 220, 0.2),
      rgb(220, 220, 220, 1) 50%,
      rgb(220, 220, 220, 0.2)
    )
  );
  --_resizer-bgimage-s-hover: var(
    --blockquote-base-embedded-webview-resize-resizer-bgcolor-hover,
    linear-gradient(
      90deg,
      rgb(220, 220, 220, 0.2),
      rgb(220, 220, 220, 1) 50%,
      rgb(220, 220, 220, 0.2)
    )
  );

  contain: content;
  display: flex;
  flex-direction: column;
  align-items: center;
  block-size: inherit;
  padding-block: calc(var(--__resizer-factor) * 1) calc(var(--__resizer-factor) * 2);
}

:host([hidden]),
[hidden] {
  display: none !important;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

.rect {
  position: relative;
  align-self: center;
  min-inline-size: var(--_rect-min-width);
  min-block-size: var(--_rect-min-height);
  max-inline-size: var(--_rect-max-width);
  max-block-size: var(--_rect-max-height);
  inline-size: var(--_rect-width);
  block-size: var(--_rect-height);
  transform: translateZ(0);
}

.resizer {
  /* https://github.com/ChromeDevTools/devtools-frontend/tree/main/front_end/Images/src */
  display: block;
  position: absolute;
  background-color: var(--_resizer-bgcolor); // --color-background-elevation-2: rgb(222 225 230);
  inline-size: 100%;
  block-size: 100%;

  &::after {
    // resizeVertical
    content: url("data:image/svg+xml,%0A%3Csvg width='6' height='26' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='2' height='26' rx='1' fill='%23848282'/%3E%3Crect x='4' width='2' height='26' rx='1' fill='%23848282'/%3E%3C/svg%3E");
    position: absolute;
    inset-block-start: 50%;
    inset-inline-start: 50%;
    transform: translateX(-50%);
  }

  &-n {
    block-size: calc(var(--__resizer-factor) / 4);
    inset-block-start: calc(var(--__resizer-factor) / 4 * -1);
    inset-inline-start: calc(var(--__resizer-factor) * -1);
    inline-size: calc(100% + var(--__resizer-factor) * 2);
    border-start-start-radius: calc(var(--__resizer-factor) / 10);
    border-start-end-radius: calc(var(--__resizer-factor) / 10);

    &::after {
      content: none;
    }
  }

  &-se {
    cursor: nwse-resize;
    border-end-end-radius: calc(var(--__resizer-factor) / 10);

    &::after {
      // resizeDiagonal
      transform: translate(-50%, -50%);
    }
  }

  &-sw {
    cursor: nesw-resize;
    border-end-start-radius: calc(var(--__resizer-factor) / 10);

    &::after {
      // resizeDiagonal
      transform: translate(-50%, -50%) translateY(-0.0938rem) rotate(90deg);
    }
  }

  &-se,
  &-e {
    inset-inline-end: calc(var(--__resizer-factor) * -1);
  }

  &-se,
  &-sw,
  &-s {
    inset-block-end: calc(var(--__resizer-factor) * -1);
  }

  &-w,
  &-sw {
    inset-inline-start: calc(var(--__resizer-factor) * -1);
  }

  &-se,
  &-sw {
    block-size: var(--__resizer-factor);
    inline-size: var(--__resizer-factor);

    &::after {
      // resizeDiagonal
      content: url("data:image/svg+xml,%0A%3Csvg width='13' height='13' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)' fill='%23848282'%3E%3Crect x='-.195' y='10.775' width='15.566' height='2' rx='1' transform='rotate(-45 -.195 10.775)'/%3E%3Crect x='5.346' y='11.241' width='8.401' height='2' rx='1' transform='rotate(-45 5.346 11.24)'/%3E%3C/g%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Cpath fill='%23fff' d='M0 0h13v13H0z'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E");
    }

    &:hover {
      background-color: var(
        --_resizer-bgcolor-hover
      ); // --color-background-highlight: rgb(218, 220, 224);
    }
  }

  &-s {
    cursor: ns-resize;
    block-size: var(--__resizer-factor);

    &::after {
      // resizeHorizontal
      content: url("data:image/svg+xml,%0A%3Csvg width='26' height='6' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='26' height='2' rx='1' fill='%23848282'/%3E%3Crect y='4' width='26' height='2' rx='1' fill='%23848282'/%3E%3C/svg%3E");
      transform: translate(-50%, -50%) translateY(-0.1875rem);
    }

    &:hover {
      background-image: var(
        --_resizer-bgimage-s-hover
      ); // --color-background-highlight: rgb(218, 220, 224);
    }
  }

  &-e,
  &-w {
    cursor: ew-resize;
    inline-size: var(--__resizer-factor);

    &:hover {
      background-image: var(
        --_resizer-bgimage-ew-hover
      ); // --color-background-highlight: rgb(218, 220, 224);

      background-position: bottom;
    }
  }
}

:host([resizing]),
:host([resizing]) ::slotted(*) {
  cursor: move;
  user-select: none;
}

:host([resizing]) ::slotted(*) {
  pointer-events: none;
}
