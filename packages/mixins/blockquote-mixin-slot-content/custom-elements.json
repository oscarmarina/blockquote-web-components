{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/BlockquoteMixinSlotContent.js",
      "declarations": [
        {
          "kind": "mixin",
          "description": "![Lit](https://img.shields.io/badge/lit-3.0.0-blue.svg)\n\n`BlockquoteMixinSlotContent` is a mixin for managing the flattened set of nodes assigned to a slot when the node(s) contained in some slot change.\n\n### Demo\n\n[![Open in StackBlitz](https://developer.stackblitz.com/img/open_in_stackblitz.svg)](https://stackblitz.com/github/oscarmarina/blockquote-web-components/tree/main/packages/mixins/blockquote-mixin-slot-content)\n\n### Usage\n\n`BlockquoteMixinSlotContent` implements the event handling pattern called [event delegation](https://javascript.info/event-delegation).\n\nIt's necessary to set up the \"catch-all\" handler on **this.shadowRoot** node.\n\n```js\nthis.shadowRoot.addEventListener('slotchanges', this._onSlotChanges.bind(this));\n```\n\n### Example:\n\n```js\nclass SlotElement extends BlockquoteMixinSlotContent(LitElement) {\n  // ...\n  connectedCallback() {\n    super.connectedCallback && super.connectedCallback();\n    this.shadowRoot.addEventListener('slotchanges', this._onSlotChanges.bind(this));\n  }\n\n  _onSlotChanges(ev) {\n    const { detail } = ev;\n    console.log(detail);\n  }\n  // ...\n}\n```\n\n## Caveats with whitespace:\n\nIt's important to understand some of the nuances between text nodes that contain _`text`_ and text nodes that contain only [`whitespace`](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Whitespace#what_is_whitespace).\n\n```html\n<slot-element>\n  nodeText1\n  <p>Element 1</p>\n  <p>Element 2</p>\n</slot-element>\n```\n\n#### assignedNodes returns 5 Nodes\n\n```js\nassignedNodes: Array(5)\n0: text // textContent: \"\\n        nodeText1\\n        \"\n1: p    // textContent: \"Element 1\"\n2: text // textContent: \"\\n        \"\n3: p    // textContent: \"Element 2\"\n4: text // textContent: \"\\n        \"\nlength: 5\n```\n\nAlso, another problem with whitespace is that when the content is just whitespace, assignedNodes are no longer able to return `flattened` nodes.\n\n#### without `whitespace`\n\n```html\n<slot-element>\n  #shadow-root\n  <slot>\n    <img src=\"icon.svg\" />\n  </slot>\n</slot-element>\n\n<slot-element>Hello</slot-element>\n```\n\n```js\ndocument.querySelector('slot-element').textContent = '';\n\n// assignedNodes [`img`]\n```\n\n<hr>\n\n#### with `whitespace`\n\n```html\n<slot-element>\n  #shadow-root\n  <slot>\n    <img src=\"icon.svg\" />\n  </slot>\n</slot-element>\n\n<slot-element>Hello</slot-element>\n```\n\n```js\ndocument.querySelector('slot-element').textContent = ' ';\n\n// assignedNodes [`#text`]\n// * missing `flattened` node\n```\n\n<hr>\n\n## The `detail property` - keeping that in mind.\n\nThe mixin will return only nodes [whose content is not whitespace](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Whitespace#whitespace_helper_functions)\nand equally for flattened nodes.\n\n```html\n<slot-element>\n  #shadow-root\n  <slot>\n    <img src=\"icon.svg\" />\n  </slot>\n</slot-element>\n\n<slot-element>\n  <p>sdfas</p>\n  <p>2jfie</p>\n</slot-element>\n```\n\n#### `event.detail`\n\n```json\n{\n  \"assignedSlotContent\": {\n    \"slotName\": \"\",\n    \"assignedSlot\": slot\n  },\n  \"assignedNodesContent\": {\n    \"assignedNodesByNode\": [\n      {\n        \"flatten\": false,\n        \"assignedNodes\": p,\n        \"assignedSlot\": slot\n      },\n      {\n        \"flatten\": false,\n        \"assignedNodes\": p,\n        \"assignedSlot\": slot\n      }\n    ],\n    \"assignedNodes\": [p, p]\n  },\n  \"flattenedNodesContent\": {\n    \"assignedNodesByNode\": [\n      {\n        \"flatten\": true,\n        \"assignedNodes\": img,\n        \"assignedSlot\": null\n      }\n    ],\n    \"assignedNodes\": [img]\n  },\n  \"originalEvent\": {\n    \"event\": {\n      \"isTrusted\": true,\n      \"type\": \"slotchange\",\n      \"target\": null,\n      \"currentTarget\": null,\n      // ...\n    },\n    \"assignedNodes\": [text, p, text, p, text, text, text]\n  }\n}\n```\n\n<hr>\n\n```html\n<slot-element>\n  #shadow-root\n  <slot></slot>\n</slot-element>\n\n<slot-element> </slot-element>\n```\n\n#### `event.detail`\n\n```json\n{\n  \"assignedSlotContent\": {\n    \"slotName\": \"\",\n    \"assignedSlot\": null\n  },\n  \"assignedNodesContent\": {\n    \"assignedNodesByNode\": [],\n    \"assignedNodes\": []\n  },\n  \"flattenedNodesContent\": {\n    \"assignedNodesByNode\": [],\n    \"assignedNodes\": []\n  },\n  \"originalEvent\": {\n    \"event\": {\n      \"isTrusted\": true,\n      \"type\": \"slotchange\",\n      \"target\": null,\n      \"currentTarget\": null,\n      // ...\n    },\n    \"assignedNodes\": [text]\n  }\n}\n```",
          "name": "BlockquoteMixinSlotContent",
          "members": [
            {
              "kind": "method",
              "name": "_onSlotChange",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "parameters": [
            {
              "name": "Base"
            }
          ],
          "mixins": [
            {
              "name": "dedupeMixin",
              "package": "@open-wc/dedupe-mixin"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BlockquoteMixinSlotContent",
          "declaration": {
            "name": "BlockquoteMixinSlotContent",
            "module": "src/BlockquoteMixinSlotContent.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "BlockquoteMixinSlotContent",
          "declaration": {
            "name": "BlockquoteMixinSlotContent",
            "module": "./BlockquoteMixinSlotContent.js"
          }
        }
      ]
    }
  ]
}
