{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/BlockquoteMixinSlotContent.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "BlockquoteMixinSlotContent",
          "description": "![Lit](https://img.shields.io/badge/lit-2.0.0-blue)\n\n`BlockquoteMixinSlotContent` is a mixin for manage the flattened set of nodes assigned to a slot when the node(s)contained in some slot change.\n\n## Usage:\n\n`BlockquoteMixinSlotContent` implement the event handling pattern called [event delegation](https://javascript.info/event-delegation).\n\nIt's necessary to setup the \"catch-all\" handler on **this.shadowRoot** node.\n\n```js\nthis.shadowRoot.addEventListener('slotchanges', this._onSlotChanges.bind(this));\n```\n\n### Example:\n\n```js\nclass slotElement extends BlockquoteMixinSlotContent(LitElement) {\n ...\n connectedCallback() {\n   super.connectedCallback && super.connectedCallback();\n   this.shadowRoot.addEventListener('slotchanges', this._onSlotChanges.bind(this));\n }\n\n  _onSlotChanges(ev) {\n     const { detail } = ev;\n     console.log(detail);\n   }\n ...\n}\n```\n\n## Caveats with whitespace:\n\nIt's important to understand some of the nuances between text nodes that contain _`text`_ and text nodes that contain only [`whitespace`](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Whitespace#what_is_whitespace).\n\n```html\n<slot-element>\n nodeTex1\n <p>Element 1</p>\n <p>Element 2</p>\n</slot-element>\n```\n\n#### assignedNodes returns 5 Nodes\n\n```js\n assignedNodes: Array(5)\n 0: text // textContent: \"\\n        nodeText1\\n        \"\n 1: p    // textContent: \"Element 1\"\n 2: text // textContent: \"\\n        \"\n 3: p    // textContent: \"Element 2\"\n 4: text // textContent: \"\\n        \"\n length: 5\n```\n\nalso another problem with whitespace is that when the content is just whitespace assignedNodes is no longer able to return `flattened` nodes.\n\n#### without `whitespace`\n\n```html\n<slot-element>\n #shadow-root\n <slot>\n   <img src=\"icon.svg\" />\n </slot>\n</slot-element>\n\n<slot-element>Hello</slot-element>\n```\n```js\ndocument.querySelector('slot-element').textContent = '';\n\n// assignedNodes [`img`]\n```\n\n\n<hr>\n\n#### with `whitespace`\n\n```html\n<slot-element>\n #shadow-root\n <slot>\n   <img src=\"icon.svg\" />\n </slot>\n</slot-element>\n\n<slot-element>Hello</slot-element>\n```\n```js\ndocument.querySelector('slot-element').textContent = ' ';\n\n// assignedNodes [`#text`]\n// * missing `flattened` node\n```\n\n\n\n<hr>\n\n## The `detail property` - keeping that in mind.\n\nThe mixin will return only nodes [whose content is not white space](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Whitespace#whitespace_helper_functions)\nand equally for flattened nodes.\n\n```html\n<slot-element>\n #shadow-root\n <slot>\n   <img src=\"icon.svg\" />\n </slot>\n</slot-element>\n\n<slot-element>\n <p>sdfas</p>\n <p>2jfie</p>\n</slot-element>\n```\n\n#### `event.detail`\n\n```json\n{\n   \"assignedSlotContent\" : {\n     \"slotName\": \"\",\n     \"assignedSlot\": slot\n   },\n   \"assignedNodesContent\": {\n       \"assignedNodesByNode\": [\n           {\n               \"flatten\": false,\n               \"assignedNodes\": p,\n               \"assignedSlot\": slot\n           },\n           {\n               \"flatten\": false,\n               \"assignedNodes\": p,\n               \"assignedSlot\": slot\n           }\n       ],\n       \"assignedNodes\": [p, p]\n   },\n   \"flattenedNodesContent\": {\n       \"assignedNodesByNode\": [\n           {\n               \"flatten\": true,\n               \"assignedNodes\": img,\n               \"assignedSlot\": null\n           }\n       ],\n       \"assignedNodes\": [img]\n   },\n   \"originalEvent\": {\n       \"event\": {\n           isTrusted: true, type: 'slotchange', target: null, currentTarget: null, ...\n       },\n       \"assignedNodes\": [text, p, text, p, text, text, text]\n   }\n}\n```\n\n<hr>\n\n```html\n<slot-element>\n #shadow-root\n <slot></slot>\n</slot-element>\n\n<slot-element> </slot-element>\n```\n\n#### `event.detail`\n\n```json\n{\n   \"assignedSlotContent\" : {\n     \"slotName\": \"\",\n     \"assignedSlot\": null\n   },\n   \"assignedNodesContent\": {\n       \"assignedNodesByNode\": [],\n       \"assignedNodes\": []\n   },\n   \"flattenedNodesContent\": {\n       \"assignedNodesByNode\": [],\n       \"assignedNodes\": []\n   },\n   \"originalEvent\": {\n       \"event\": {\n           isTrusted: true, type: 'slotchange', target: null, currentTarget: null, ...\n       },\n       \"assignedNodes\": [text]\n   }\n}\n```\n\n## Exports\n\n- BlockquoteMixinSlotContent"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BlockquoteMixinSlotContent",
          "declaration": {
            "name": "BlockquoteMixinSlotContent",
            "module": "src/BlockquoteMixinSlotContent.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "BlockquoteMixinSlotContent",
          "declaration": {
            "name": "BlockquoteMixinSlotContent",
            "module": "./src/BlockquoteMixinSlotContent.js"
          }
        }
      ]
    }
  ]
}
