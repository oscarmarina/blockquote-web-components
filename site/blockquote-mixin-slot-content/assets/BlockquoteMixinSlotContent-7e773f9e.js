const r=new WeakMap;function b(t,s){let n=s;for(;n;){if(r.get(n)===t)return!0;n=Object.getPrototypeOf(n)}return!1}function k(t){return s=>{if(b(t,s))return s;const n=t(s);return r.set(n,t),n}}const y=t=>!/[^\t\n\r ]/.test(t.textContent),m=t=>t.nodeType===8||t.nodeType===3&&y(t),x=t=>class extends t{connectedCallback(){super.connectedCallback&&super.connectedCallback(),this.shadowRoot.addEventListener("slotchange",this._onSlotChange.bind(this))}_onSlotChange(n){var c;const{target:u}=n,o=u;if(!o)return;const N=o.name||o.getAttribute("name")||"",i=[...o.assignedNodes(),...o.childNodes],f=o.assignedNodes({flatten:!0}),a=[];i.length&&i.forEach(e=>{var g;m(e)||a.push({flatten:e.assignedSlot===null,assignedNodes:e.nodeType===3?(g=e.textContent)==null?void 0:g.trim():e,assignedSlot:e.assignedSlot})});const l=a.filter(e=>e.flatten===!1),d=a.filter(e=>e.flatten===!0),h={assignedNodesByNode:l,assignedNodes:l.map(e=>e.assignedNodes)},C={assignedNodesByNode:d,assignedNodes:d.map(e=>e.assignedNodes)},p={slotName:N,assignedSlot:((c=l[0])==null?void 0:c.assignedSlot)||null},S=new CustomEvent("slotchanges",{bubbles:!0,detail:{assignedSlotContent:p,assignedNodesContent:h,flattenedNodesContent:C,originalEvent:{event:n,assignedNodes:f}}});this.shadowRoot.dispatchEvent(S)}},v=k(x);export{v as B};
