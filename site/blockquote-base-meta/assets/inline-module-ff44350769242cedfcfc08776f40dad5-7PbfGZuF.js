/**
@license
Copyright (c) 2015 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at
http://polymer.github.io/LICENSE.txt The complete set of authors may be found at
http://polymer.github.io/AUTHORS.txt The complete set of contributors may be
found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as
part of the polymer project is also subject to an additional IP rights grant
found at http://polymer.github.io/PATENTS.txt
*/const u=globalThis||window,c=Symbol.for("BLOCKQUOTE"),l=Symbol.for("blockquoteBaseMeta"),y=Symbol.for("types"),a=Symbol.for("uuid"),r=u[c]||Object.create(null),s=r[l]||Object.create(null);s[y]=s[y]||new Map;s[a]=s[a]||Math.random().toString(36).substring(2,10);r[l]=s;u[c]=r;class n{constructor({type:e="default",key:t,value:o}={}){this.type=e,this.key=t,o!=null&&(this.value=o)}static get types(){return s[y]}static get uuid(){return s[a]}get value(){const e=this.__key||this.key;this.__key=void 0;const t=n.types.get(this.type);return t==null?void 0:t.get(e)}set value(e){var t;if(this.type&&this.key){const o=(t=n.types.get(this.type))!=null?t:new Map;n.types.set(this.type,o),e!=null?o.set(this.key,e):o.delete(this.key)}}get list(){return Array.from(this.mapList.values())}get mapList(){var e;return(e=n.types.get(this.type))!=null?e:new Map}get objectList(){return Object.fromEntries(this.mapList)}byKey(e){return this.__key=e,this.value}}const m=new n({key:"basic",value:"foo/bar"}),i=new n({type:"article",key:"indefinite",value:"a/an"}),f=document.querySelector(".meta-key .inner-meta-key"),h=document.querySelector(".meta-key .inner-meta-value");f.textContent=`${m.key}`;h.textContent=`${m.byKey("basic")}`;const k=document.querySelector(".meta-query .inner-meta-key"),d=document.querySelector(".meta-query .inner-meta-value");k.textContent=`${i.type}`;d.textContent=`${JSON.stringify(i.list)}`;const g=document.querySelector(".meta-query .inner-meta-keys"),L=document.querySelector(".meta-query .inner-meta-values");g.textContent=`${i.type}`;L.textContent=`${JSON.stringify(i.objectList)}`;console.info("objectList: ",i.objectList);console.info("mapList: ",i.mapList);const p={id:"dsfaskj0"},b=new n({type:"two",key:p,value:"foo/bar"});console.info(b.mapList);console.info(b.byKey(p));
